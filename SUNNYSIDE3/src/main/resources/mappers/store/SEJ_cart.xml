<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sunnyside.cart">
	<!-- 
		 do_payComplete   : 결제완료 테이블에 저장
		 do_save   : 장바구니 저장
		 do_delete : 장바구니 삭제
		 do_deleteAll : 장바구니 전체 삭제
	     do_update : 장바구니 수정
	     sumMoney: 장바구니 금액 합계
	     do_retrieve  : 장바구니 목록
	     do_countCart: 장바구니 동일한 상품 레코드 확인
	     do_updateCountCart: 장바구니 상품수량 변경
	   -->
<!-- 결제완료 테이블에 저장 -->
	<insert id="do_payComplete" parameterType="Cart">
	INSERT INTO PAY_HISTORY  (
			    cart_id,
			    user_id,
			    str_count,
			    product_id,	
			    pay_code,
			    total_cost,
    			pay_dt   
			) VALUES (
			    #{cartId,jdbcType=VARCHAR},
			    #{userId,jdbcType=VARCHAR},
			    #{strCount,jdbcType=VARCHAR},
			    #{productId,jdbcType=VARCHAR},
			    #{payCode,jdbcType=VARCHAR},
			    #{totalCost,jdbcType=NUMERIC},
			    SYSDATE
			)		
	</insert>

<!-- 결제완료 목록 -->
	<select id="do_payCompleteList" parameterType="Cart" resultType="Cart" >
	 	SELECT
	 		a.pay_code as payCode,
		    a.cart_id as cartId,
		    c.product_nm as productNm,
		    b.user_id as userId,
		    a.str_count as strCount,
		    a.total_cost as totalCost,
		    c.product_id as productId,
		    a.pay_dt as payDt
		FROM
		    pay_history a, user_info b, product c 
		WHERE
		    b.user_id = a.user_id
		    AND c.product_id = a.product_id
		    AND a.user_id = #{userId,jdbcType=VARCHAR}
		    AND a.pay_code = #{payCode,jdbcType=VARCHAR}
	</select>

 <!-- 주문번호 생성 후 정보수정 -->
	<update id="do_make_codeNm"  parameterType="Cart">
		UPDATE cart
		SET
		    pay_code = #{payCode,jdbcType=VARCHAR}
		WHERE
			product_id =  #{productId,jdbcType=VARCHAR}
		    AND user_id =  #{userId,jdbcType=VARCHAR}
		     
	</update>
 
<!-- 주문하기창 목록 -->
	<select id="do_payRetrieve" parameterType="Cart" resultType="Cart" >
	 	SELECT
	 		a.pay_code as payCode,
		    a.cart_id as cartId,
		    c.product_nm as productNm,
		    b.user_id as userId,
		    a.count,
		    c.product_cost as  oriProductCost,
		    c.product_cost*a.count as productCost,
		    c.product_id as productId,
		    c.save_file_nm as saveFileNm
		FROM
		    cart a, user_info b, product c 
		WHERE
		    b.user_id = a.user_id
		    AND c.product_id = a.product_id
		    AND a.user_id = #{userId,jdbcType=VARCHAR}
		    AND a.pay_code = #{payCode,jdbcType=VARCHAR}
	</select>


<!-- 장바구니 저장(추가) -->
	<insert id="do_save" parameterType="Cart">
	INSERT INTO CART (
			    cart_id,
			    user_id,
			    count,
			    product_id				    
			) VALUES (
			    TO_CHAR(SYSDATE,'yyyymmdd')||'-'||to_char(CART_SEQ.NEXTVAL, 'FM000'),
			    #{userId,jdbcType=VARCHAR},
			    #{count,jdbcType=NUMERIC},
			    #{productId,jdbcType=VARCHAR}
			)		
	</insert>
	
<!-- 장바구니 삭제 -->
	<delete id="do_delete"  parameterType="Cart">
		DELETE
		FROM CART
		WHERE CART_ID    = #{cartId,jdbcType=VARCHAR}
	</delete>

<!-- 장바구니 전체 삭제 -->
	<delete id="do_deleteAll">
		DELETE 
		FROM CART
	
	</delete>

<!-- 장바구니 수정 -->
	<update id="do_update"  parameterType="Cart">
		UPDATE cart
		SET
		    count = #{count,jdbcType=NUMERIC}
		WHERE
			product_id =  #{productId,jdbcType=VARCHAR}
		    AND user_id =  #{userId,jdbcType=VARCHAR}
		     
	</update>

<!-- 장바구니 총금액 합계 -->
	<select id="do_totalCost" resultType="int">
		SELECT
		    NVL(SUM(b.product_cost*count),0) totalCost
		FROM
		   		 cart a , product b
		WHERE a.product_id = b.product_id 
		AND a.user_id = #{userId,jdbcType=VARCHAR}	
	</select>

<!-- 장바구니 목록 -->
	<select id="do_retrieve" parameterType="Cart" resultType="Cart" >
	 	SELECT
		    a.cart_id as cartId,
		    c.product_nm as productNm,
		    b.user_id as userId,
		    a.count,
		    c.product_cost as  oriProductCost,
		    c.product_cost*a.count as productCost,
		    c.product_id as productId,
		    c.save_file_nm as saveFileNm
		FROM
		    cart a, user_info b, product c 
		WHERE
		    b.user_id = a.user_id
		    AND c.product_id = a.product_id
		    AND a.user_id = #{userId,jdbcType=VARCHAR}
		ORDER BY
		    a.cart_id 
	</select>

<!-- 장바구니 동일한 상품 레코드 확인 -->
	<select id="do_countCart" resultType="int">
		SELECT
		    COUNT(*)
		FROM
		    cart
		WHERE 
		    user_id =#{userId,jdbcType=VARCHAR}
		AND product_id = #{productId,jdbcType=VARCHAR}
	</select>

<!-- 장바구니 상품수량 변경 -->
	<update id="do_updateCountCart" parameterType="Cart">
		UPDATE cart	
		SET count = count + #{count} 
		WHERE user_id= #{userId,jdbcType=VARCHAR}
		AND product_id = #{productId,jdbcType=VARCHAR}
	</update>
</mapper>