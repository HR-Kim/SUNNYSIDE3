<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="screeninfo">

	<!-- 검색어 -->
	<sql id="baseCondition">
	<where>
		<choose>
			<when test="'10' == searchDiv">
				MOVIE_ID LIKE '%' || #{searchWord} || '%'
			</when>
			<when test="'20' == searchDiv">
				ROOM_ID LIKE '%' || #{searchWord} || '%'
			</when>
			<otherwise></otherwise>
		</choose>
	</where>
	</sql>	
	 
	<delete id="do_delete" parameterType="ScreenInfo">
		DELETE FROM SCREEN_INFO WHERE SCREEN_ID = #{screenId, jdbcType=VARCHAR}
	</delete>
	
	<select id="do_selectOne" parameterType="ScreenInfo" resultType="ScreenInfo">
		SELECT
		    SCREEN_ID as screenId,
		    ROOM_ID as roomId,
		    BRANCH_ID as branchId,
		    MOVIE_ID movieId,
		    TO_CHAR(START_TIME, 'YYYY-MM-DD HH24:MI:SS') as startTime,
			TO_CHAR(END_TIME, 'YYYY-MM-DD HH24:MI:SS') as endTime,
			TO_CHAR(SCREEN_DT, 'YYYY-MM-DD HH24:MI:SS') as screenDt,
		    ADULT_COST as adultCost,
		    STUDENT_COST as studentCost,
		    EPISODE as episode
		FROM
		    SCREEN_INFO
		WHERE
		    SCREEN_ID = #{screenId, jdbcType=VARCHAR}
	</select>
	 
	<select id="do_save" parameterType="ScreenInfo">
		INSERT INTO SCREEN_INFO (
		    SCREEN_ID,
		    ROOM_ID,
		    BRANCH_ID,
		    MOVIE_ID,
		    START_TIME,
		    END_TIME,
		    SCREEN_DT,
		    ADULT_COST,
		    STUDENT_COST,
		    EPISODE
		) VALUES (
		    DBMS_RANDOM.STRING('X', 20),
		    #{roomId, jdbcType=VARCHAR},
		    #{branchId, jdbcType=VARCHAR},
		    #{movieId, jdbcType=VARCHAR},
		    TO_DATE(#{startTime, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
		    TO_DATE(#{endTime, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
		    TO_DATE(#{screenDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
		    #{adultCost, jdbcType=NUMERIC},
		    #{studentCost, jdbcType=NUMERIC},
		    #{episode, jdbcType=NUMERIC}
		)
	</select>
	
	<update id="do_update" parameterType="ScreenInfo">
		UPDATE SCREEN_INFO
		SET
			ROOM_ID = #{roomId, jdbcType=VARCHAR},
			BRANCH_ID = #{branchId, jdbcType=VARCHAR},
			MOVIE_ID = #{movieId, jdbcType=VARCHAR},
			START_TIME = TO_DATE(#{startTime, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			END_TIME = TO_DATE(#{endTime, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			SCREEN_DT = TO_DATE(#{screenDt, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			ADULT_COST = #{adultCost, jdbcType=NUMERIC},
			STUDENT_COST = #{studentCost, jdbcType=NUMERIC},
			EPISODE = #{episode, jdbcType=NUMERIC}
		WHERE
			screen_id = #{screenId, jdbcType=VARCHAR}
	</update>
	
	<select id="do_retrieve" parameterType="Search" resultType="ScreenInfo">
		SELECT T1.RNUM as num
		      ,T1.SCREEN_ID as screenId
			  ,T1.ROOM_ID as roomId
			  ,T1.BRANCH_ID as branchId
			  ,T1.MOVIE_ID as movieId
			  ,TO_CHAR(T1.START_TIME, 'YYYY-MM-DD HH24:MI:SS') as startTime
			  ,TO_CHAR(T1.END_TIME, 'YYYY-MM-DD HH24:MI:SS') as endTime
			  ,TO_CHAR(T1.SCREEN_DT, 'YYYY-MM-DD HH24:MI:SS') as screenDt
			  ,T1.ADULT_COST as adultCost
			  ,T1.STUDENT_COST as studentCost
			  ,T1.EPISODE as episode
		      ,T2.KORTITLE as korTitle
		      ,T2.ENGTITLE as engTitle
		      ,T2.EXPERT_RATE as expertRate
		      ,T2.VISITOR_RATE as visitorRate
		FROM(
		    SELECT ROWNUM AS RNUM, A.*
		    FROM(
		         SELECT *
		         FROM SCREEN_INFO
		         <include refid="baseCondition"/>
		         ORDER BY SCREEN_DT desc, EPISODE desc
		        )A
		    WHERE CEIL(ROWNUM/ #{pageSize, jdbcType=VARCHAR} ) = #{pageNum, jdbcType=VARCHAR}
		    )T1,
		    (
		    SELECT *
		    FROM MOVIE
		    )T2
		WHERE T1.MOVIE_ID = T2.MOVIE_ID(+)
		
	</select>

</mapper>